#ifndef PROTOCOL_H
#define PROTOCOL_H

#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<string.h>
#include<stdio.h>


typedef unsigned int uint;

enum ENUM_MSG_TYPE{
    ENUM_MSG_TYPE_MIN = 0,
    //注册
    ENUM_MSG_TYPE_REGIST_REQUEST,
    ENUM_MSG_TYPE_REGIST_RESPEND,
    //登录
    ENUM_MSG_TYPE_LOGIN_REQUEST,
    ENUM_MSG_TYPE_LOGIN_RESPEND,
    //用户操作
    ENUM_MSG_TYPE_USER_SELECT_REQUST,
    ENUM_MSG_TYPE_USER_SELECT_RESPEND,
    //在线用户
    ENUM_MSG_TYPE_ONLINE_USER_REQUST,
    ENUM_MSG_TYPE_ONLINE_USER_RESPEND,
    //添加好友
    ENUM_MSG_TYPE_ADD_FRIEND_REQUST,
    ENUM_MSG_TYPE_ADD_FRIEND_RESPEND,
    //同意添加好友
    ENUM_MSG_TYPE_ACCEPT_FRIEND_REQUST,
    ENUM_MSG_TYPE_ACCEPT_FRIEND_RESPEND,
    //刷新好友
    ENUM_MSG_TYPE_FLUSH_FRIEND_REQUST,
    ENUM_MSG_TYPE_FLUSH_FRIEND_RESPEND,
    //删除好友
    ENUM_MSG_TYPE_DELETE_FRIEND_REQUST,
    ENUM_MSG_TYPE_DELETE_FRIEND_RESPEND,
    //聊天请求与响应
    ENUM_MSG_TYPE_CHAT_FRIEND_REQUEST,
    ENUM_MSG_TYPE_CHAT_FRIEND_RESPEND,
    //创建文件夹的请求与响应
    ENUM_MSG_TYPE_CREATE_MKDIR_REQUEST,
    ENUM_MSG_TYPE_CREATE_MKDIR_RESPEND,
    //刷新文件
    ENUM_MSG_TYPE_FLUSH_FILE_REQUEST,
    ENUM_MSG_TYPE_FLUSH_FILE_RESPEND,
    //删除文件夹的请求与响应
    ENUM_MSG_TYPE_DELETE_MKDIR_REQUEST,
    ENUM_MSG_TYPE_DELETE_MKDIR_RESPEND,
    //删除文件
    ENUM_MSG_TYPE_DELETE_FILE_REQUEST,
    ENUM_MSG_TYPE_DELETE_FILE_RESPEND,
    //rename文件
    ENUM_MSG_TYPE_RENAME_FILE_REQUEST,
    ENUM_MSG_TYPE_RENAME_FILE_RESPEND,
    //move 文件
    ENUM_MSG_TYPE_MOVE_FILE_REQUEST,
    ENUM_MSG_TYPE_MOVE_FILE_RESPEND,
    //uplod 文件
    ENUM_MSG_TYPE_UPLOAD_FILE_REQUEST,
    ENUM_MSG_TYPE_UPLOAD_FILE_RESPEND,
    //uplod FILE DATA
    ENUM_MSG_TYPE_UPLOAD_FILE_DATA_REQUEST,
    ENUM_MSG_TYPE_UPLOAD_FILE_DATA_RESPEND,
    //download file
    ENUM_MSG_TYPE_DOWNLOAD_FILE_REQUEST,
    ENUM_MSG_TYPE_DOWNLOAD_FILE_RESPEND,
    //download file data
    ENUM_MSG_TYPE_DOWNLOAD_FILE_DATA_REQUEST,
    ENUM_MSG_TYPE_DOWNLOAD_FILE_DATA_RESPEND,

    //share FILE DATA
    ENUM_MSG_TYPE_SHARE_FILE_REQUEST,
    ENUM_MSG_TYPE_SHARE_FILE_RESPEND,
    //share FILE AGREE
    ENUM_MSG_TYPE_SHARE_FILE_AGREE_REQUEST,
    ENUM_MSG_TYPE_SHARE_FILE_AGREE_RESPEND,
    ENUM_MSG_TYPE_MAX=0x00ffffff,
};

struct PDU{
    uint uiPDULen;//总的协议长度
    uint uiMsgType;//消息类型
    uint uiMsgLen;//消息长度
    char caData[64];//参数
    char caMsg[];//实际消息
};



PDU *mkPDU(uint uiMsgLen);//创建协议数据单元

struct FileInfo{
    char caName[32];
    int iFileType;
};








#endif // PROTOCOL_H
